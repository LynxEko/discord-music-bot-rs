name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - rust-target: x86_64-unknown-linux-musl
            os-arch: x86_64
    env:
      NAME: discord-music-bot-rs
      TARGET: ${{ matrix.rust-target }}
      OS: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Alpine
        uses: jirutka/setup-alpine@v1
        with:
          branch: v3.15
          arch: ${{ matrix.os-arch }}
          packages: >
            build-base
            pkgconfig
            lld
            rustup
            musl-dev
            openssl
            openssl-dev
            openssl-libs-static
            cmake
            clang
            clang-dev
            make
            gcc
            g++
            libc-dev
            linux-headers
            perl
            yt-dlp
      - name: Install Rust stable toolchain via rustup
        run: rustup-init --target ${{ matrix.rust-target }} --default-toolchain stable --profile minimal -y
        shell: alpine.sh {0}
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.7
      - name: Build statically linked binary
        run: cargo build --target ${{ matrix.rust-target }}
        shell: alpine.sh {0}
      - name: Run tests
        run: cargo test --verbose --target ${{ matrix.rust-target }}
        shell: alpine.sh {0}
      - name: Archive debug artifacts
        uses: actions/upload-artifact@v4
        with:
          name: discord-music-bot-rs-linux-debug
          path: target/${{ matrix.rust-target }}/debug/discord-music-bot-rs

  build-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - rust-target: x86_64-unknown-linux-musl
            os-arch: x86_64
    env:
      NAME: discord-music-bot-rs
      TARGET: ${{ matrix.rust-target }}
      OS: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup Alpine
        uses: jirutka/setup-alpine@v1
        with:
          branch: v3.15
          arch: ${{ matrix.os-arch }}
          packages: >
            build-base
            pkgconfig
            lld
            rustup
            musl-dev
            openssl
            openssl-dev
            openssl-libs-static
            cmake
            clang
            clang-dev
            make
            gcc
            g++
            libc-dev
            linux-headers
            perl
            yt-dlp
      - name: Install Rust stable toolchain via rustup
        run: rustup-init --target ${{ matrix.rust-target }} --default-toolchain stable --profile minimal -y
        shell: alpine.sh {0}
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.7
      - name: Build statically linked binary
        run: cargo build --target ${{ matrix.rust-target }}
        shell: alpine.sh {0}
      - name: Archive release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: discord-music-bot-rs-linux
          path: target/${{ matrix.rust-target }}/release/discord-music-bot-rs
